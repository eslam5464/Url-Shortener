version: '3.9'

services:
  backend:
    build:
      context: .
      dockerfile: ./Dockerfile-be
    image: python:3.12-slim
    command: bash -c "alembic upgrade head & python3 main.py"
    container_name: backend
    environment:
      - BACKEND_HOST
      - BACKEND_PORT
      - POSTGRES_HOST
      - POSTGRES_PORT
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - POSTGRES_DB_SCHEMA
      - ALLOWED_HOSTS

    volumes:
      - ./backend:/app/backend
    ports:
      - "8000:${BACKEND_PORT}"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    deploy:
      restart_policy:
        condition: on-failure
        delay: 3s
        max_attempts: 3
        window: 10s
    networks:
      - url-shortener

  postgres:
    image: postgres:16-alpine
    container_name: postgres
    environment:
      - POSTGRES_HOST
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - POSTGRES_DB_SCHEMA
    restart: on-failure
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-d", "${POSTGRES_DB}" ]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s
    ports:
      - "54321:${POSTGRES_PORT}"
    networks:
      - url-shortener

  redis:
    image: redis:alpine
    restart: on-failure
    command: [ "redis-server", "--requirepass", "${REDIS_PASS}" ]
    ports:
      - "6379:${REDIS_PORT}"
    networks:
      - url-shortener


networks:
  url-shortener:
    name: url-shortener
    driver: bridge
